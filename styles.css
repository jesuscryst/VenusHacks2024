/* You can target elements by name/type */
ul {
    background-color: plum;
}

ol {
    background-color: goldenrod;
}

table, th, td {
    border: 1px solid black;
    padding: 5px;
    border-collapse: collapse;
}

/* You can target elements by class as well by preceding the class name with . */
.text {
    background-color: violet;
    color: white;
    font-family: "Comic Sans MS", "Comic Sans", cursive;
}

.text h4 {
    color: greenyellow;
    font-style: italic;
}

.list-box {
    display: flex;
    justify-content: space-around;
    align-items: center;
}

/* You can target elements by id by preceding the id name with # */
#greeting {
    color: darkblue;
}

#exampleFormBtn {
    background-color: #008CBA;
    color: white;
    border-color: white;
    border-radius: 10px;
    transition-duration: 0.4s;
}

/*
    For buttons, you can style them differently based on if the mouse is hovering over them or not.
    This can be done using :hover after the button name.
*/
#exampleFormBtn:hover {
    background-color: white;
    color: #008CBA;
    border-color: #008CBA;
    border-radius: 10px;
}

/*
    Feel free to mess around with the padding, border and margin here
    to see how the content is affected. You may notice the content's
    box change size (padding), the border getting thinner/thicker (border),
    and the distance between the two content boxes change (margin).
*/
#the-box {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 400px;
    border: 5px solid black;
    background-color: gray;
}

#content1 {
    background-color: lightcoral;
    padding: 10px; 
    border: 10px dotted red;
    margin: 100px;
}

#content2 {
    background-color: lightgreen;
    padding: 5px;
    border: 5px dashed green;
    margin: 10px;
}

/* 
    Animations are one of the more advanced topics in CSS, but they can be simple
    enough to use for your ZotHacks project. The basic idea is that any element has an animation property
    where the animation can be applied to it. The property has 3 main subproperties we will focus on:
    name, duration, iteration. The name of the animation is defined by keyframes, which describes
    all the steps in the animation. Duration is how long each cycle of the animation lasts. Iteration
    is how long you want the animation to repeat.

    More info: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations
*/

#petr {
    height: 10%;
    width: 10%;
    animation: spin 0.5s infinite;
}

@keyframes spin {
    0%   { transform: rotate(0deg); }
    100%  { transform: rotate(360deg); }
}

* {
    margin: 0;
    padding: 0;
  }
  
  body {
    width: 100vw;
    height: 100vh;
    margin: 20px auto;
    font-family: "Lato";
    font-weight: 300;
  }
  
  form {
    padding: 15px 300px;
    display: flex;
    gap: 10px;
    justify-content: center;
  }
  
  form label {
    font-size: 1.5rem;
    font-weight: bold;
  }
  
  input {
    font-family: "Lato";
  }
  
  a {
    color: #0000ff;
    text-decoration: none;
  }
  
  a:hover {
    text-decoration: underline;
  }
  
  #wrapper {
    width: 80%;
    margin: auto;
    margin-top: 2rem;
    letter-spacing: 0.5px;
    height: 80%;
  }
  #loginform {
    margin: 0 auto;
    padding-bottom: 25px;
    background: #fface6;
    width: 100vw;
    height: 100vh;
    max-width: 100%;
    border: 2px solid #ffffff;
    border-radius: 4px;
  }
  
  #loginform {
    padding-top: 18px;
    text-align: center;
  }
  
  #loginform p {
    padding: 15px 25px;
    font-size: 1.4rem;
    font-weight: bold;
  }
  
  #chatbox {
    text-align: left;
    margin: 0 auto;
    margin-bottom: 25px;
    padding: 10px;
    background: #fff;
    height: 300px;
    width: 530px;
    border: 1px solid #000000;
    overflow: auto;
    border-radius: 4px;
    border-bottom: 4px solid #000000;
  }
  
  #usermsg {
    flex: 1;
    border-radius: 4px;
    border: 1px solid #eba7ff;
    width: 100px;
  }
  
  #name {
    border-radius: 4px;
    border: 1px solid #dd00ff;
    padding: 2px 8px;
  }
  
  #submitmsg,
  #enter{
    background: rgb(255, 212, 243);
    border: 2px solid rgb(255, 148, 208);
    color: white;
    padding: 4px 10px;
    font-weight: bold;
    border-radius: 4px;
  }
  
  .error {
    color: #ff0000;
  }
  
  #menu {
    padding: 15px 25px;
    display: flex;
  }
  
  #menu p.welcome {
    color: #dd00ff;
    flex: 1;
  }
  
  a#exit {
    color: white;
    background: rgb(255, 0, 111);
    padding: 4px 8px;
    border-radius: 4px;
    font-weight: bold;
  }
  
  .msgln {
    margin: 0 0 5px 0;
  }
  
  .msgln span.left-info {
    color: rgb(255, 0, 111);
  }
  
  .msgln span.chat-time {
    color: #ffb0de;
    font-size: 60%;
    vertical-align: super;
  }
  
  .msgln b.user-name, .msgln b.user-name-left {
    font-weight: bold;
    background: #ffb0de;
    color: white;
    padding: 2px 4px;
    font-size: 90%;
    border-radius: 4px;
    margin: 0 5px 0 0;
  }
  
  .msgln b.user-name-left {
    background: rgb(255, 0, 111);
  }